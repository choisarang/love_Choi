@charset "UTF-8";

.ani_one{width: 100%; min-width: 1200px; height: 200px; padding: 0.5rem; background-color: #fdc;}

.ani_one > .test{width: 200px; height: 200px; border-radius: 100%; background-color: #5cf; text-align: center; line-height: 200px; 

/* -webkit-animation-name: rotateball;
-moz-animation-name: rotateball;
-ms-animation-name: rotateball;
-o-animation-name: rotateball;
animation-name: rotateball;

-webkit-animation-duration: 3000ms;
-moz-animation-duration: 3000ms;
-ms-animation-duration: 3000ms;
-o-animation-duration: 3000ms;
animation-duration: 3000ms;(3초)

animation-iteration-count: infinite;

animation-direction: alternate; */

/* animation: rotateball 3000ms infinite alternate 1000ms; */
animation: rotateball 3000ms infinite paused;

}

.test:hover{animation-play-state: running;}

@-webkit-keyframes rotateball{}
@-moz-keyframes rotateball{}
@-ms-keyframes rotateball{}
@-o-keyframes rotateball{}
@keyframes rotateball{
  0%{background-color: #f05;}
  50%{transform: translate(50vw, -100px) rotate(360deg); color: #fff; font-weight: bold;}
  100%{transform: translate(100vw) rotate(720deg);}
  /* 처음, 끝 필수. 중간 값은 자유 */
}

/** animation
  * animation-name : 애니메이션 기능을 수행할 이름을 만드는 곳
  * animation-duration : 한번의 흐름에 대한 수행 시간
  * animation-timing-function : 한번의 수행에 대한 흐름의 느낌
    (ease, linear, ease-out ...)
  * animation-iteration-count : 반복 수행
    (1번일 경우에는 1, 10번의 경우 10, 무한반복일 경우에는 infinite)
  * animation-direction : 애니메이션 수행(한번의 수행) 후 방향 조절
    (normal, reverse, alternate, alternate-reverse)
  * animation-delay : 애니메이션 지연 시간
  * animation-play-state : 움직이거나 멈추게 하는 기능
    (pauser,running)
  * animation-fill-mode : 애니메이션 전/후에 처리할 값
  */